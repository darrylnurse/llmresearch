import { ChatOpenAI } from "@langchain/openai";
import { ChatPromptTemplate,
         PromptTemplate,
       } from "@langchain/core/prompts";

import * as dotenv from "dotenv";
dotenv.config();

const model = new ChatOpenAI({
  openAIApiKey: process.env.OPEN_API_KEY,
  modelName: "gpt-3.5-turbo",
  temperature: 1,
  verbose: true,
});

// const prompt = ChatPromptTemplate.fromTemplate(
//     "You are a comedian with a dark sense of humor. Tell a joke based on the following word {input}"
// );
//
// const prompt = ChatPromptTemplate.fromMessages([
//     ["system", "Generate a fact based on the word generated by the user."],
//     ["human", "{input}"],
// ]);
//
// const chain = prompt.pipe(model);

// const response  = await chain.stream({
//   input: "lizard"
// });
//
// console.log(response);

//console.log(await prompt.format({input: "dog"}));

// const noInputPrompt = new PromptTemplate({
//   inputVariables: [],
//   template: "What is barbados?",
// })
//
// console.log(await noInputPrompt.format());

const systemTemplate = "You are a kind assistant that translates {input} to {output}.";
const humanTemplate = "{text}";

const chatPrompt = ChatPromptTemplate.fromMessages([
    ["system", systemTemplate],
    ["human", humanTemplate],
]);

const formattedChatPrompt = await chatPrompt.formatMessages({
  "input": "Formal English",
  "output": "Bajan Slang",
  "text": "How are you doing?",
});

const chatChain = chatPrompt.pipe(model);

const chatResult = await chatChain.invoke({
  input: "Formal English",
  output: "Bajan Slang",
  text: "How are you doing?",
});

console.log(chatResult);


